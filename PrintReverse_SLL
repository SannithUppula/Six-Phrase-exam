import java.util.*;
class SinglyLinkedListNode {
    int data;
    SinglyLinkedListNode next;
    SinglyLinkedListNode(int data) {
        this.data = data;
        this.next = null;
    }
}
public class ReversePrint {
    public static void reversePrint(SinglyLinkedListNode head) {
        Stack<Integer> stack=new Stack<>();
        SinglyLinkedListNode current=head;
        while (current!=null) {
            stack.push(current.data);
            current = current.next;
        }
        while (!stack.isEmpty()) {
            System.out.println(stack.pop());
        }
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        while(t-->0){
            int n = sc.nextInt();
            SinglyLinkedListNode head = null, tail = null;
            for (int i = 0; i < n; i++) {
                int data = sc.nextInt();
                SinglyLinkedListNode newNode = new SinglyLinkedListNode(data);
                if (head == null) {
                    head = newNode;
                    tail = newNode;
                } else {
                    tail.next = newNode;
                    tail = newNode;
                }
            }
            reversePrint(head);
        }
        sc.close();
    }

}
